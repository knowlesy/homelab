# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Specifically exclude password files
passwords.tfvars*
secrets.tfvars*

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info
*.terraform.lock.hcl

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ansible-specific exclusions
# =========================

# Sensitive Files - NEVER commit these
**/group_vars/*/vault*
**/host_vars/*/vault*
*.vault
vault_pass*
.vault_pass*
*.pem
*.key
*.crt
*.csr
id_rsa*
id_ed25519*
secrets.yml
secrets.yaml
**/secrets/**
.env
.env.*

# Ansible temporary and cache files
*.retry
.ansible/
ansible.log
*.log
.ansible_cache/
fact_cache/

# Ansible Galaxy and Collections
.galaxy_install_info
roles/*/meta/.galaxy_install_info
ansible_collections/
collections/

# Development files
.vscode/
.idea/
*.swp
*.swo
*~
PLAYBOOK-INDEX.md

# Python (for Ansible)
__pycache__/
*.py[cod]
*$py.class
venv/
.venv/
*.egg-info/

# OS files
.DS_Store
Thumbs.db
Desktop.ini

# Backup and temporary files
*.bak
*.backup
*.orig
*.tmp

# Molecule testing
.molecule/
molecule/*/cache/

#inventory
inventory.yml